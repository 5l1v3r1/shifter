#!/usr/bin/ksh

if [[ -e /opt/cray/nodehealth/default/bin/libplugin.sh ]]; then
    . /opt/cray/nodehealth/default/bin/libplugin.sh
fi

context=/dsl
CONFIG_FILE="$context/@@@CONFIG_FILE@@@"
readonly CONFIG_FILE

. $CONFIG_FILE

foundVFSMounts=1
(cat /proc/mounts | awk '{print $2}' | egrep "^$udiMount" > /dev/null 2>&1) || foundVFSMounts=0

foundLoopMount=1
(cat /proc/mounts | awk '{print $2}' | egrep "^$loopMount" > /dev/null 2>&1) || foundLoopMount=0

kmodCacheExists=1
[[ -e "$kmodCache" ]] || kmodCacheExists=0

possibleKernelModules="loop mbcache jbd2 ext4 cramfs"
foundModules=""
for mod in $possibleKernelModules; do
    foundModule=1
    (/sbin/lsmod | egrep "^$mod\s+" > /dev/null 2>&1) || foundModule=0
    if [[ $foundModule -eq 1 ]]; then
        foundModules="$foundModules,$mod"
    fi
done

if [[ -n "$foundModules" ]]; then
    foundModules="${foundModules:1}"
fi

errMessage=""
if [[ $foundVFSMounts -eq 1 ]]; then
    errMessage="$errMessage,UDI/VFS mounts remain"
fi
if [[ $foundLoopMount -eq 1 ]]; then
    errMessage="$errMessage,loopback mount remains"
fi
if [[ $kmodCacheExists -eq 1 ]]; then
    errMessage="$errMessage,temporary loaded kernel module cache file exists ($kmodCache)"
fi
if [[ -n "$foundModules" ]]; then
    errMessage="$errMessage,temporary loaded modules still loaded: $foundModules"
fi

if [[ -n "$errMessage" ]]; then
    errMessage="${errMessage:1}"
    log_output "$errMessage"
    exit 1
fi
exit 0
