#!/usr/bin/ksh

if [[ -e /opt/cray/nodehealth/default/bin/libplugin.sh ]]; then
    . /opt/cray/nodehealth/default/bin/libplugin.sh
fi

context=/dsl

### parse config file
#while read line; do
#    if [[ "$line" == "*=" ]]; then continue; fi
#    IFS="="
#    set - $line
#    key=$1
#    value=$2
#    if [[ -z $2 ]]; then
#        continue;
#    fi
#    unset IFS
#    expr="export $key=\"$value\""
#    eval $expr
#    IFS="="
#done < "$CONFIG_FILE"
#unset IFS

foundVFSMounts=1
(cat /proc/mounts | awk '{print $2}' | egrep "^/var/udiMount" > /dev/null 2>&1) || foundVFSMounts=0

foundLoopMount=1
(cat /proc/mounts | awk '{print $2}' | egrep "^/var/loopUdiMount" > /dev/null 2>&1) || foundLoopMount=0

errMessage=""
if [[ $foundVFSMounts -eq 1 ]]; then
    errMessage="$errMessage,UDI/VFS mounts remain"
fi
if [[ $foundLoopMount -eq 1 ]]; then
    errMessage="$errMessage,loopback mount remains"
fi
if [[ $kmodCacheExists -eq 1 ]]; then
    errMessage="$errMessage,temporary loaded kernel module cache file exists ($kmodCache)"
fi

if [[ -n "$errMessage" ]]; then
    errMessage="${errMessage:1}"
    log_output "$errMessage"
    exit 1
fi
exit 0
